There are three primary types of configuration data in *SysTest*, each of which
is supplied as using an Erlang Term based format that can be read by
+file:consult/1+. 

== Terminology

We use the term _configuration element_ (or just _element_) to describe a tagged
tuple stored in a configuration file. Consider the following configuration:

```erlang
{name, "Tom"}.
{age, 61}.
{roles, [{person, active}, {employee, inactive}]}.
```

In this configuration (above), the _top level_ entries +name, age, roles+ are 
all _configuration elements_, but the +person, employee+ tuples are usually
referred to as _sub-elements_ for clarity.

== Settings

*Settings* are the most basic form of configuration that *SysTest* handles, and
are simply a means to externalise certain data you wish to make use of in your
tests. There is no _special_ format for this data, nor are there any allowed 
(or disallowed) _elements_. 

Settings are sourced from +./resources/default.settings+ initially, if it 
exists. Then the _base directory_ is searched (recursively) for a file whose
name matches the pattern +./%{USER}.settings+, where +USER+ contains the content
of the `USER` environment variable. These two files are then merged, with the
_configuration elements_ from the latter file overwriting those from the 
default.

Settings can be extracted at runtime using the 
[[Configuration API|systest_config]], or accessed in and used in 
_string-expressions_ by referencing the `settings` group. For example:

```erlang
{web_auth_url, "${settings.base_url}/login.html"}.
```

== Resource Configuration Files

These configuration files define the various *Resources* that can be made to
participate in a test run. For more information about *Resources* in general,
see the [[Concepts/Overview|concepts]] page.

*Resources Configuration Files* are sources from +./resources/*.resource+ by
default, though like most config locations, this can be overridden by the
current *Profile* (more on this later).

== Profiles

*Profiles*, also called _test profiles_ in this guide, provide a mechanism to
control the *SysTest* runtime environment. Each _element_ that the profile
can contain is optional and unrecognised _elements_ are ignored. When an 
_element_ is not given in a *profile*, its default value is used instead.

[options="header", width="100%", cols="1,6,4,2"]
|======================
|Element |Description |Controls |Default
|framework | The testing framework (module) to use | Test Execution |+systest_ct+
|output_dir | Directory for generated artefacts | Logging, coverage reports |see _Temporary Files_ below
|log_dir | Base directory for all log files | Logging | +"{output_dir}/logs"+
|settings_base | Default/Base _Settings_ file | Settings | +"./resources/default.settings"+ 
|resources | List of paths or glob patterns used to find _Resources_. | Resources | +[./resources/\*.resource]+
|targets | Paths to directories containing beam code, or module names  | Test Execution | +["ebin"]+
|specifications | Test Specification File | Common Test (only) | +[]+
|hooks | Testing Framework Hooks | Testing Framework(s) | See _Framework Configuration_
|======================

You select a *profile* when running *SysTest* by passing `-P <profile name>` on
the command line. For more details, see the 
[[Interfaces Documentation|interfaces]].
